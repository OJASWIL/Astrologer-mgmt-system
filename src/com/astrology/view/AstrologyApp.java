package com.astrology.view;

import com.astrologer.model.AstrologerModel;
import com.astrology.util.ValidationUtil;
import java.awt.Color;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ojaswi
 */
public class AstrologyApp extends javax.swing.JFrame {

    private List<AstrologerModel> astrologyList;
    private java.awt.CardLayout cardLayout;
    private final ValidationUtil validationUtil;
    private final Color errorColor = new Color(255, 51, 0);
    private final Color yellowColor = new Color(239, 192, 32);
    
    /**
     * Creates new form AstrologyApp
     */
    public AstrologyApp() {
        initComponents();
        validationUtil = new ValidationUtil();
        initializeLayout();
        initializeData();
        startProgress();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PnlLoginScreen = new javax.swing.JPanel();
        SignInLabel = new javax.swing.JLabel();
        LoginButton = new javax.swing.JButton();
        userNameField = new javax.swing.JTextField();
        userNameLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        passWord = new javax.swing.JLabel();
        forgetPasswordLabel = new javax.swing.JLabel();
        lblLoginError = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        pnlMainScreen = new javax.swing.JPanel();
        tabPaneMain = new javax.swing.JTabbedPane();
        pnlHome = new javax.swing.JPanel();
        welcomeText = new javax.swing.JLabel();
        sloganText = new javax.swing.JLabel();
        slogan2 = new javax.swing.JLabel();
        pnlAstrologerList = new javax.swing.JPanel();
        spTblAstrologer = new javax.swing.JScrollPane();
        tblAstrologer = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        txtFldLmuId = new javax.swing.JTextField();
        txtFldLName = new javax.swing.JTextField();
        txtFldLContact = new javax.swing.JTextField();
        txtFldLAge = new javax.swing.JTextField();
        lblErrorMsgLmuId = new javax.swing.JLabel();
        lblErrorMsgName = new javax.swing.JLabel();
        lblErrorMsgAge = new javax.swing.JLabel();
        lblErrorMsgLContant = new javax.swing.JLabel();
        lblErrorMsgLLevel = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtFldLLevel = new javax.swing.JTextField();
        astrologerListLabel = new javax.swing.JLabel();
        astroFormTitle = new javax.swing.JLabel();
        pnlAboutUs = new javax.swing.JPanel();
        btnLogout = new javax.swing.JButton();
        titleLogin = new javax.swing.JLabel();
        PnlLoadingScreen = new javax.swing.JPanel();
        loadingLabel = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        splashScreen = new javax.swing.JProgressBar();

        PnlLoginScreen.setBackground(new java.awt.Color(0, 51, 102));
        PnlLoginScreen.setForeground(new java.awt.Color(255, 255, 255));

        SignInLabel.setForeground(new java.awt.Color(250, 250, 250));
        SignInLabel.setText("Sign in to Astrology App");

        LoginButton.setText("Login");
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonActionPerformed(evt);
            }
        });

        userNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        userNameLabel.setText("UserName");

        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });

        passWord.setForeground(new java.awt.Color(255, 255, 255));
        passWord.setText("Password");

        forgetPasswordLabel.setForeground(new java.awt.Color(255, 255, 255));
        forgetPasswordLabel.setText("ForgerYourPassword ?");

        lblLoginError.setForeground(new java.awt.Color(255, 0, 0));

        jLabel1.setText("add image here and delete this label");

        javax.swing.GroupLayout PnlLoginScreenLayout = new javax.swing.GroupLayout(PnlLoginScreen);
        PnlLoginScreen.setLayout(PnlLoginScreenLayout);
        PnlLoginScreenLayout.setHorizontalGroup(
            PnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PnlLoginScreenLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addGroup(PnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLoginError)
                    .addComponent(passWord)
                    .addComponent(SignInLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(passwordField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(userNameField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))
                    .addGroup(PnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(LoginButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(forgetPasswordLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(119, 119, 119))
        );
        PnlLoginScreenLayout.setVerticalGroup(
            PnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlLoginScreenLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(SignInLabel)
                .addGap(34, 34, 34)
                .addComponent(userNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(userNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(PnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passWord)
                    .addComponent(jLabel1))
                .addGap(2, 2, 2)
                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblLoginError)
                .addGap(18, 18, 18)
                .addComponent(forgetPasswordLabel)
                .addGap(27, 27, 27)
                .addComponent(LoginButton)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        welcomeText.setText("Welcome");

        sloganText.setText("\"Your Journey To The Star's Begins Here\"");

        slogan2.setText("\"DISCOVER WHAT UNIVERSE HAS IN STORE FOR YOU- LOVE,CAREER,HEALTH AND MORE!\"");

        javax.swing.GroupLayout pnlHomeLayout = new javax.swing.GroupLayout(pnlHome);
        pnlHome.setLayout(pnlHomeLayout);
        pnlHomeLayout.setHorizontalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(slogan2)
                    .addComponent(sloganText)
                    .addComponent(welcomeText))
                .addContainerGap(758, Short.MAX_VALUE))
        );
        pnlHomeLayout.setVerticalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(welcomeText)
                .addGap(18, 18, 18)
                .addComponent(sloganText)
                .addGap(88, 88, 88)
                .addComponent(slogan2)
                .addContainerGap(242, Short.MAX_VALUE))
        );

        tabPaneMain.addTab("Home", pnlHome);

        tblAstrologer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Expertise", "Contact", "Age"
            }
        ));
        tblAstrologer.setAutoscrolls(false);
        tblAstrologer.setColumnSelectionAllowed(true);
        tblAstrologer.setShowGrid(true);
        tblAstrologer.setShowHorizontalLines(true);
        tblAstrologer.setShowVerticalLines(true);
        spTblAstrologer.setViewportView(tblAstrologer);
        tblAstrologer.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        txtFldLmuId.setText("id");
        txtFldLmuId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldLmuIdActionPerformed(evt);
            }
        });

        txtFldLName.setText("Name");

        txtFldLContact.setText("Contact");
        txtFldLContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldLContactActionPerformed(evt);
            }
        });

        txtFldLAge.setText("Age");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtFldLLevel.setText("Level");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFldLmuId, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblErrorMsgLmuId))
                        .addGap(57, 57, 57)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFldLName, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                            .addComponent(lblErrorMsgName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(100, 100, 100)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFldLContact, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblErrorMsgLContant, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFldLAge, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                            .addComponent(lblErrorMsgAge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(71, 71, 71)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFldLLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrorMsgLLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFldLmuId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFldLAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFldLContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFldLName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFldLLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblErrorMsgAge, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblErrorMsgLLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(lblErrorMsgLmuId))
                            .addComponent(lblErrorMsgName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblErrorMsgLContant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete))
                        .addGap(45, 45, 45))))
        );

        astrologerListLabel.setText("Astrologer List");

        astroFormTitle.setText("Astrologer Form");

        javax.swing.GroupLayout pnlAstrologerListLayout = new javax.swing.GroupLayout(pnlAstrologerList);
        pnlAstrologerList.setLayout(pnlAstrologerListLayout);
        pnlAstrologerListLayout.setHorizontalGroup(
            pnlAstrologerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAstrologerListLayout.createSequentialGroup()
                .addGroup(pnlAstrologerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAstrologerListLayout.createSequentialGroup()
                        .addContainerGap(163, Short.MAX_VALUE)
                        .addGroup(pnlAstrologerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlAstrologerListLayout.createSequentialGroup()
                                .addComponent(astroFormTitle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnlAstrologerListLayout.createSequentialGroup()
                                .addComponent(spTblAstrologer, javax.swing.GroupLayout.PREFERRED_SIZE, 897, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(pnlAstrologerListLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(astrologerListLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(37, 37, 37))
        );
        pnlAstrologerListLayout.setVerticalGroup(
            pnlAstrologerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAstrologerListLayout.createSequentialGroup()
                .addComponent(astrologerListLabel)
                .addGap(18, 18, 18)
                .addComponent(spTblAstrologer, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(astroFormTitle)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabPaneMain.addTab("Astrologer List", pnlAstrologerList);

        javax.swing.GroupLayout pnlAboutUsLayout = new javax.swing.GroupLayout(pnlAboutUs);
        pnlAboutUs.setLayout(pnlAboutUsLayout);
        pnlAboutUsLayout.setHorizontalGroup(
            pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1273, Short.MAX_VALUE)
        );
        pnlAboutUsLayout.setVerticalGroup(
            pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 449, Short.MAX_VALUE)
        );

        tabPaneMain.addTab("About Us", pnlAboutUs);

        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        titleLogin.setText("Astrology App");

        javax.swing.GroupLayout pnlMainScreenLayout = new javax.swing.GroupLayout(pnlMainScreen);
        pnlMainScreen.setLayout(pnlMainScreenLayout);
        pnlMainScreenLayout.setHorizontalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabPaneMain)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainScreenLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(titleLogin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlMainScreenLayout.setVerticalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainScreenLayout.createSequentialGroup()
                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleLogin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabPaneMain))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PnlLoadingScreen.setBackground(new java.awt.Color(0, 51, 102));
        PnlLoadingScreen.setForeground(new java.awt.Color(255, 255, 255));

        loadingLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        loadingLabel.setForeground(new java.awt.Color(242, 242, 242));
        loadingLabel.setText("Loading ...");
        loadingLabel.setToolTipText("");

        title.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        title.setForeground(new java.awt.Color(250, 250, 250));
        title.setText("Astrology Management System");

        javax.swing.GroupLayout PnlLoadingScreenLayout = new javax.swing.GroupLayout(PnlLoadingScreen);
        PnlLoadingScreen.setLayout(PnlLoadingScreenLayout);
        PnlLoadingScreenLayout.setHorizontalGroup(
            PnlLoadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlLoadingScreenLayout.createSequentialGroup()
                .addGroup(PnlLoadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlLoadingScreenLayout.createSequentialGroup()
                        .addGap(305, 305, 305)
                        .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, 716, Short.MAX_VALUE))
                    .addGroup(PnlLoadingScreenLayout.createSequentialGroup()
                        .addGap(340, 340, 340)
                        .addComponent(splashScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(PnlLoadingScreenLayout.createSequentialGroup()
                .addGap(452, 452, 452)
                .addComponent(loadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PnlLoadingScreenLayout.setVerticalGroup(
            PnlLoadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PnlLoadingScreenLayout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(title)
                .addGap(87, 87, 87)
                .addComponent(splashScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addComponent(loadingLabel)
                .addContainerGap(199, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PnlLoadingScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PnlLoadingScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

        private void startProgress() {
        javax.swing.SwingWorker<Void, Integer> worker = new javax.swing.SwingWorker<>() {
            @Override
            protected Void doInBackground() throws Exception {
                for (int i = 0; i <= 100; i++) {
                    Thread.sleep(30); // Simulated delay for progress bar
                    publish(i); // Publish progress
                }
                return null;
            }

            @Override
            protected void process(java.util.List<Integer> chunks) {
                int progress = chunks.get(chunks.size() - 1);
                splashScreen.setValue(progress);
            }

            @Override
            protected void done() {
                loadScreen("LoginScreen"); // Switch to login screen
            }
        };
        worker.execute(); // Start the worker thread
    }
        
     private void initializeLayout() {
        cardLayout = new java.awt.CardLayout();
        getContentPane().setLayout(cardLayout);

        // Add panels with unique identifiers
         getContentPane().add(PnlLoadingScreen, "LoadingScreen");
        getContentPane().add(PnlLoginScreen, "LoginScreen");
        getContentPane().add(pnlMainScreen, "MainScreen");

        // Start with the loading screen
        loadScreen("LoadingScreen");
    }
     
      private void loadScreen(String screenName) {
        cardLayout.show(getContentPane(), screenName);
    }
      
     private javax.swing.border.TitledBorder createTitledBorder(Color color, String title) {
        return javax.swing.BorderFactory.createTitledBorder(
                javax.swing.BorderFactory.createLineBorder(color, 2),
                title,
                javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
                javax.swing.border.TitledBorder.DEFAULT_POSITION,
                new java.awt.Font("Segoe UI", 1, 12),
                color
        );
    }
       
      private boolean validateField(JTextField textField, String fieldName, JLabel errorLbl, String errorMsg, Color errorColor, Color successColor, boolean isValidFormat) {
        if (ValidationUtil.isNullOrEmpty(textField.getText())) {
            textField.setBorder(createTitledBorder(errorColor, fieldName));
            errorLbl.setText("Field cannot be empty!");
            errorLbl.setVisible(true);
            return false;
        } else if (!isValidFormat) {
            textField.setBorder(createTitledBorder(errorColor, fieldName));
            errorLbl.setText(errorMsg);
            errorLbl.setVisible(true);
            return false;
        } else {
            textField.setBorder(createTitledBorder(successColor, fieldName));
            errorLbl.setVisible(false);
            return true;
        }
    }
       private boolean checkDuplicateAstrologer(AstrologerModel astro) {
        return astrologyList.stream()
                .anyMatch(existingStudent
                        -> existingStudent.getLmuId() == astro.getLmuId());
    }
       
         private void showDialogBox(String message, String title, int messageType) {
        JOptionPane.showMessageDialog(this, message, title, messageType);
    }
         
           private void registerStudent(AstrologerModel astro) {
        astrologyList.add(astro);
        DefaultTableModel model = (DefaultTableModel) tblAstrologer.getModel();
        model.addRow(new Object[]{
            astro.getLmuId(), astro.getName(), astro.getPosition(),
            astro.getContact(), astro.getAge()
        });
    }
           
        private void initializeData() {
        astrologyList = new LinkedList<>();

        // Registering sample students
        registerStudent(new AstrologerModel(1212121, "Ojaswi Lamichhane", "Expert", "9812544702", (short) 19));
        registerStudent(new AstrologerModel(7894562, "Ojaswi Sharma", "beginner", "9818928272", (short) 12));
        registerStudent(new AstrologerModel(7892686, "Prabuddha ", "beginner", "9823386476", (short) 24));
        registerStudent(new AstrologerModel(7851565, "op", "expert", "9818928272", (short) 40));
    }

         private void clearAstrologerForm() {
        txtFldLmuId.setText("");
        txtFldLName.setText("");
        txtFldLLevel.setText("");
        txtFldLContact.setText("");
        txtFldLAge.setText("");
    }
         
          private void loadListToTable(List<AstrologerModel> astrologerList) {
        DefaultTableModel model = (DefaultTableModel) tblAstrologer.getModel();

        // Clear existing rows if needed
        model.setRowCount(0);

        // Populate the table with student data
        astrologerList.forEach(student -> model.addRow(new Object[]{
            student.getLmuId(),
            student.getName(),
            student.getPosition(),
            student.getContact(),
            student.getAge()
        }));
    }
          
private void updateAstrologer(AstrologerModel updatedAstro) {
    boolean found = false;
    for (AstrologerModel astro : astrologyList) {
        if (astro.getLmuId() == updatedAstro.getLmuId()) {
            astro.setName(updatedAstro.getName());
            astro.setPosiotion(updatedAstro.getPosition());
            astro.setContact(updatedAstro.getContact());
            astro.setAge(updatedAstro.getAge());
            found = true;
            break;
        }
    }

    if (found) {
        clearAstrologerForm(); // Clear form fields
        loadListToTable(astrologyList);
        showDialogBox("Astrologer updated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
    } else {
        showDialogBox("No astrologer found with the given ID.", "Error", JOptionPane.ERROR_MESSAGE);
    }
}

 private void deleteAstrologer(int lmuId) {
    boolean removed = astrologyList.removeIf(astro -> astro.getLmuId() == lmuId);

    if (removed) {
        clearAstrologerForm(); // Clear form fields
        loadListToTable(astrologyList);
        showDialogBox("Astrologer deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
    } else {
        showDialogBox("No astrologer found with the given ID.", "Error", JOptionPane.ERROR_MESSAGE);
    }
}


          
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
         boolean isValid = true;

        // Validate ID
        isValid &= validateField(
                txtFldLmuId, "Id", lblErrorMsgLmuId, "Must be a 7-digit number.",
                errorColor, yellowColor, ValidationUtil.isValidLmuId(txtFldLmuId.getText())
        );

        // Validate Full Name
        isValid &= validateField(
                txtFldLName, "Full Name", lblErrorMsgName, "Must contain only alphabets.",
                errorColor, yellowColor, ValidationUtil.isValidName(txtFldLName.getText())
        );

        // Validate Program
        isValid &= validateField(
                txtFldLLevel, "Program", lblErrorMsgLLevel, "Select intermediate, beginner, or expert.",
                errorColor, yellowColor, ValidationUtil.isValidLevel(txtFldLLevel.getText())
        );

        // Validate Contact
        isValid &= validateField(
                txtFldLContact, "Contact", lblErrorMsgLContant, "Must start with 98 and have 10 digits.",
                errorColor, yellowColor, ValidationUtil.isValidContact(txtFldLContact.getText())
        );

        // Validate Age
        try {
            short age = Short.parseShort(txtFldLAge.getText().trim());
            isValid &= validateField(
                    txtFldLAge, "Age", lblErrorMsgAge, "Must be between 18 and 70.",
                    errorColor, yellowColor, ValidationUtil.isValidAge(age)
            );
        } catch (NumberFormatException e) {
            validateField(txtFldLAge, "Age", lblErrorMsgAge, "Must be a valid number.", errorColor, yellowColor, false);
            isValid = false;
        }

        if (isValid) {
            // Create a StudentModel instance
            AstrologerModel newStudent = new AstrologerModel(
                    Integer.parseInt(txtFldLmuId.getText().trim()),
                    txtFldLName.getText().trim(),
                    txtFldLLevel.getText().trim(),
                    txtFldLContact.getText().trim(),
                    Short.parseShort(txtFldLAge.getText().trim())
            );

            // Check for duplicate LMU ID
            if (checkDuplicateAstrologer(newStudent)) {
                txtFldLmuId.setBorder(createTitledBorder(errorColor, "ID"));
                showDialogBox("ID already exists.", "Duplicate Entry", JOptionPane.WARNING_MESSAGE);
            } else {
                // Add the student if no duplicate is found
                astrologyList.add(newStudent);
                clearAstrologerForm();
                loadListToTable(astrologyList);
                txtFldLmuId.setBorder(createTitledBorder(yellowColor, "LMU ID"));
                showDialogBox("Astrologer added successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
          userNameField.setText("");
        passwordField.setText("");
        loadScreen("LoginScreen"); 
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void txtFldLmuIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldLmuIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldLmuIdActionPerformed

    private void txtFldLContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldLContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldLContactActionPerformed

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFieldActionPerformed

    private void LoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButtonActionPerformed

        String username = userNameField.getText();
        String password = new String(passwordField.getPassword());

        // Check if username or password is empty
        if (username.isEmpty() || password.isEmpty()) {
            lblLoginError.setText("Please enter your username and password.");
        } // Check if username and password are incorrect
        else if (!username.equals("a") || !password.equals("a")) {
            lblLoginError.setText("Username and password mismatch.");
        } // If credentials are correct, proceed to load the main screen
        else {
            lblLoginError.setText(""); // Clear any previous error messages
            loadScreen("MainScreen"); // Load the main screen
        }
    }//GEN-LAST:event_LoginButtonActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
         try {
        int lmuId = Integer.parseInt(txtFldLmuId.getText().trim());
        String name = txtFldLName.getText().trim();
        String position = txtFldLLevel.getText().trim();
        String contact = txtFldLContact.getText().trim();
        short age = Short.parseShort(txtFldLAge.getText().trim());

        AstrologerModel updatedAstro = new AstrologerModel(lmuId, name, position, contact, age);
        updateAstrologer(updatedAstro);
    } catch (NumberFormatException e) {
        showDialogBox("Invalid input. Please check your fields.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
           try {
        int lmuId = Integer.parseInt(txtFldLmuId.getText().trim());

        deleteAstrologer(lmuId);
    } catch (NumberFormatException e) {
        showDialogBox("Please enter a valid LMU ID.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AstrologyApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AstrologyApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AstrologyApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AstrologyApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AstrologyApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LoginButton;
    private javax.swing.JPanel PnlLoadingScreen;
    private javax.swing.JPanel PnlLoginScreen;
    private javax.swing.JLabel SignInLabel;
    private javax.swing.JLabel astroFormTitle;
    private javax.swing.JLabel astrologerListLabel;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel forgetPasswordLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblErrorMsgAge;
    private javax.swing.JLabel lblErrorMsgLContant;
    private javax.swing.JLabel lblErrorMsgLLevel;
    private javax.swing.JLabel lblErrorMsgLmuId;
    private javax.swing.JLabel lblErrorMsgName;
    private javax.swing.JLabel lblLoginError;
    private javax.swing.JLabel loadingLabel;
    private javax.swing.JLabel passWord;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JPanel pnlAboutUs;
    private javax.swing.JPanel pnlAstrologerList;
    private javax.swing.JPanel pnlHome;
    private javax.swing.JPanel pnlMainScreen;
    private javax.swing.JLabel slogan2;
    private javax.swing.JLabel sloganText;
    private javax.swing.JScrollPane spTblAstrologer;
    private javax.swing.JProgressBar splashScreen;
    private javax.swing.JTabbedPane tabPaneMain;
    private javax.swing.JTable tblAstrologer;
    private javax.swing.JLabel title;
    private javax.swing.JLabel titleLogin;
    private javax.swing.JTextField txtFldLAge;
    private javax.swing.JTextField txtFldLContact;
    private javax.swing.JTextField txtFldLLevel;
    private javax.swing.JTextField txtFldLName;
    private javax.swing.JTextField txtFldLmuId;
    private javax.swing.JTextField userNameField;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JLabel welcomeText;
    // End of variables declaration//GEN-END:variables
}
